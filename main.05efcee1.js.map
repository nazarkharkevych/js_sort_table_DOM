{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tBody","sortRows","index","rows","bySalary","sort","a","b","dataA","cells","innerText","dataB","normalize","data","slice","replace","localeCompare","addEventListener","e","header","target","closest","cellIndex","sortedRows","children","append"],"mappings":";AAAA,aAoCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlCD,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAQF,SAASC,cAAc,SAgBrC,SAASE,EAAoBC,EAAAA,GAAO,IAAdC,EAAc,EAAA,GAAA,MAAA,GAC5BC,EAAqB,IAAVF,EAeVC,OAbPA,EAAKE,KAAK,SAACC,EAAGC,GACNC,IAAAA,EAAQF,EAAEG,MAAMP,GAAOQ,UACvBC,EAAQJ,EAAEE,MAAMP,GAAOQ,UAEzBN,GAAAA,EAAU,CACNQ,IAAAA,EAAY,SAACC,GAASA,OAAAA,EAAKC,MAAM,GAAGC,QAAQ,IAAK,KAEhDH,OAAAA,EAAUJ,GAASI,EAAUD,GAG/BH,OAAAA,EAAMQ,cAAcL,KAGtBR,EA9BTN,EAAMoB,iBAAiB,QAAS,SAASC,GACjCC,IAAAA,EAASD,EAAEE,OAAOC,QAAQ,MAE5B,GAACF,EAAD,CAIEG,IAAAA,EAAYH,EAAOG,UAEnBC,EAAatB,EAASD,EAAMwB,SAAUF,GAE5CtB,EAAMyB,OAANzB,MAAAA,EAAgBuB,EAAAA","file":"main.05efcee1.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tBody = document.querySelector('tbody');\n\ntable.addEventListener('click', function(e) {\n  const header = e.target.closest('th');\n\n  if (!header) {\n    return;\n  }\n\n  const cellIndex = header.cellIndex;\n\n  const sortedRows = sortRows(tBody.children, cellIndex);\n\n  tBody.append(...sortedRows);\n});\n\nfunction sortRows([...rows], index) {\n  const bySalary = index === 3;\n\n  rows.sort((a, b) => {\n    const dataA = a.cells[index].innerText;\n    const dataB = b.cells[index].innerText;\n\n    if (bySalary) {\n      const normalize = (data) => data.slice(1).replace(',', '');\n\n      return normalize(dataA) - normalize(dataB);\n    }\n\n    return dataA.localeCompare(dataB);\n  });\n\n  return rows;\n}\n"]}